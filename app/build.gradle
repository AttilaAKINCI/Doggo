plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.akinci.doggoappcompose"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.akinci.doggoappcompose.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
            testLogging {
                events 'started', 'passed', 'skipped', 'failed'
            }
        }
    }

}

dependencies {

    implementation "androidx.core:core-ktx:1.7.0"
    implementation "androidx.appcompat:appcompat:1.4.0"
    implementation "com.google.android.material:material:1.4.0"
    implementation "androidx.activity:activity-compose:1.4.0"

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"          // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"      // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"           // LiveData
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"            // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"   // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"           // alternately - if using Java8, use the following instead of lifecycle-compiler

    //network retrofit & moshi
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation("com.squareup.retrofit2:converter-moshi:2.9.0")
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation("com.squareup.moshi:moshi-kotlin:1.13.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.13.0")

    //ROOM DB
    def room_version = "2.4.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // HILT
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0-rc01'

    // Timber logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Image Loading with coil
    implementation "io.coil-kt:coil-compose:1.4.0"

    //Lottie animations
    def lottie_version = "4.2.2"
    implementation "com.airbnb.android:lottie-compose:$lottie_version"

    //TEST RELATED
    def junit_5_version = "5.7.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_5_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit_5_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junit_5_version}"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'
    testImplementation 'com.google.truth:truth:1.0.1'
    testImplementation "io.mockk:mockk:1.10.6"
    testImplementation "androidx.room:room-testing:$room_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.0.5"

    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"   //hilt integration for testing
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"            //hilt integration for testing
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test:rules:1.4.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"
    androidTestImplementation "com.google.dagger:hilt-android:$hilt_version"

}

kapt {
    correctErrorTypes = true
}
